include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)

macro(ct_check_for_cxx11 _var)
  message(STATUS "Checking for C++11 compiler")
  set(${_var})
  if((MSVC AND (MSVC10 OR MSVC11 OR MSVC12)) OR
     (CMAKE_COMPILER_IS_GNUCXX AND NOT ${CMAKE_CXX_COMPILER_VERSION} VERSION_LESS 4.6) OR
     (CMAKE_CXX_COMPILER_ID STREQUAL "Clang" AND NOT ${CMAKE_CXX_COMPILER_VERSION} VERSION_LESS 3.1))
     set(${_VAR} 1)
     message(STATUS "Checking for C++11 compiler - available")
  else()
     message(STATUS "Checking for C++11 compiler - unavailable")
  endif()
endmacro()

macro(ct_enable_cxx11)
  ct_check_for_cxx11(_ct_cxx11_check)
  if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
  elseif(NOT _ct_cxx11_check)
    message(FATAL_ERROR "Compiler ${CMAKE_CXX_COMPILER} has no C++11 support.")
  endif()
endmacro()
